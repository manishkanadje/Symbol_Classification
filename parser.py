from xml.dom import minidomimport pdbimport osimport subprocessdef convertStrokesToCsv(inkml_file):    xmldoc = minidom.parse(inkml_file)    itemlist = xmldoc.getElementsByTagName('trace')        basename = inkml_file[inkml_file.rfind('/') + 1:inkml_file.rfind('.')]    path = inkml_file[:inkml_file.rfind('/') + 1]    csv_file = path + 'csv/' + basename + '.csv'    if not os.path.exists(path + 'csv/'):        os.makedirs(path + 'csv/')    f = open(csv_file,'w')    for item in itemlist:        #pdb.set_trace()        coordinates = item.firstChild.nodeValue;        coordinates = coordinates.strip()        coordinates = coordinates.replace(', ', ',')        _id = item.attributes['id'].value        f.write(_id + ",")        print(_id)        print(coordinates.strip())        all_points = coordinates.split(",")        for i in range(len(all_points)):            data = all_points[i].split(" ")            f.write(data[0] + " " + data[1])            if i != len(all_points) - 1:                f.write(",")        f.write("\n")    f.close()def convertInkmlToLg(inkml_file):    basename = inkml_file[inkml_file.rfind('/') + 1:inkml_file.rfind('.')]    path = inkml_file[:inkml_file.rfind('/') + 1]    lg_file = path + 'lg/' + basename + '.lg'    if not os.path.exists(path + 'lg/'):        os.makedirs(path + 'lg/')    exitCode = subprocess.check_call(["crohme2lg", "-s", inkml_file, lg_file])    convertStrokesToCsv('./TrainINKML_v3/MathBrush/200922-947-103.inkml')#convertStrokesToCsv('200922-949-211.inkml')#convertStrokesToCsv('200922-947-6.inkml')#convertStrokesToCsv('sample.inkml')