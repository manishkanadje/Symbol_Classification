################################################################################# parser.py##     Used to convert an inkml file to a csv file or to a ground truth lg file#### Submitted by: Manish Kanadje, Kedarnath Calangutkar###############################################################################import osimport subprocessfrom xml.dom import minidom# Convert inkml file to csvdef convertStrokesToCsv(inkml_file):    xmldoc = minidom.parse(inkml_file)    itemlist = xmldoc.getElementsByTagName('trace')        basename = inkml_file[inkml_file.rfind('/') + 1:inkml_file.rfind('.')]    path = inkml_file[:inkml_file.rfind('/') + 1]    csv_file = path + 'csv/' + basename + '.csv'    if not os.path.exists(path + 'csv/'):        os.makedirs(path + 'csv/')    f = open(csv_file,'w')    for item in itemlist:        coordinates = item.firstChild.nodeValue;        coordinates = coordinates.strip()        coordinates = coordinates.replace(', ', ',')        _id = item.attributes['id'].value        f.write(_id + ",")        all_points = coordinates.split(",")        for i in range(len(all_points)):            data = all_points[i].split(" ")            f.write(data[0] + " " + data[1])            if i != len(all_points) - 1:                f.write(",")        f.write("\n")    f.close()# convert inkml file to ground truth lg file using crohme2lgdef convertInkmlToLg(inkml_file, folderName):    basename = inkml_file[inkml_file.rfind('/') + 1:inkml_file.rfind('.')]    lg_file = folderName + basename + '.lg'    if not os.path.exists(folderName):        os.makedirs(folderName)    exitCode = subprocess.check_call(["crohme2lg", "-s", inkml_file, lg_file])